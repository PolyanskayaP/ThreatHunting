---
title: "lab5"
author: "Полянская Полина Алексеевна"
format:   
  md:
    output-file: README.md
editor_options: 
  chunk_output_type: inline
---

Исследование информации о состоянии беспроводных сетей

## Цель

1.  Зекрепить практические навыки использования языка программирования R для обработки данных
2.  Закрепить знания основных функций обработки данных экосистемы tidyverse языка R


## Исходные данные

1.  Ноутбук с ОС Windows 10
2.  RStudio
3.  Пакеты dplyr

## Задание

```{r}
library(dplyr)
```


## Подготовка данных

### 1. Импортируйте данные.
```{r}
all_data <- read.csv('C:/ThreatHunting/lab5/mir.csv-01.csv')
```
```{r}
head(all_data,180)
```

```{r}
data_1 <- read.csv(file='C:/ThreatHunting/lab5/mir.csv-01.csv',nrows=167)
```
```{r}
head(data_1)
```

```{r}
data_2 <- read.csv(file='C:/ThreatHunting/lab5/mir.csv-01.csv',skip=169)
```
```{r}
head(data_2)
```

### 2. Привести датасеты в вид “аккуратных данных”, преобразовать типы столбцов в соответствии с типом данных
```{r}
data_1$First.time.seen <- as.POSIXct(data_1$First.time.seen, format=" %Y-%m-%d %H:%M:%S", tz=" UTC ") 
data_1$Last.time.seen <- as.POSIXct(data_1$Last.time.seen, format=" %Y-%m-%d %H:%M:%S", tz=" UTC ") 
data_2$First.time.seen <- as.POSIXct(data_2$First.time.seen, format=" %Y-%m-%d %H:%M:%S", tz=" UTC ") 
data_2$Last.time.seen <- as.POSIXct(data_2$Last.time.seen, format=" %Y-%m-%d %H:%M:%S", tz=" UTC ") 
```

### 3. Просмотрите общую структуру данных с помощью функции glimpse()
data_1 = анонсы беспроводных точек доступа
```{r}
data_1 %>%
  glimpse()
```
data_2 = запросы на подключение клиентов к известным им точкам доступа
```{r}
data_2 %>%
  glimpse()
```

## Анализ

### 1. Определить небезопасные точки доступа (без шифрования – OPN)
```{r}
data_1 %>%
  filter(Privacy == ' OPN') 
```

### 2. Определить производителя для каждого обнаруженного устройства
через nmap...
```{r}

```

### 3. Выявить устройства, использующие последнюю версию протокола шифрования WPA3, и названия точек доступа, реализованных на этих устройствах
```{r}

WPA3_df <- data_1 %>%
  filter(Privacy == ' WPA3') 

WPA3_df['ESSID']
```
Устройств, использующих WPA3, найдено не было

Устройства, использующие WPA2:
```{r}

WPA3_df <- data_1 %>%
  filter(Privacy == ' WPA2') 

WPA3_df['ESSID']
```
### 4. Отсортировать точки доступа по интервалу времени, в течение которого они находились на связи, по убыванию.
```{r}
ep1 = as.POSIXct(strptime(data_1$First.time.seen, format='%d-%m-%Y %H:%M'))
ep2 = as.POSIXct(strptime(data_1$Last.time.seen, format='%d-%m-%Y %H:%M'))
```
```{r}
#ep_r = difftime(ep2 - ep1)
```


```{r}
#d1_razn = difftime((data_1$Last.time.seen) - (data_1$First.time.seen))
```

### 5. Обнаружить топ-10 самых быстрых точек доступа.
```{r}
speed_sort <- data_1[ order (-data_1$Speed), ]
head(speed_sort, 10)
```

### 6. Отсортировать точки доступа по частоте отправки запросов (beacons) в единицу времени по их убыванию.
```{r}
data_1[ order (-data_1$X..beacons), ]
```


## Данные клиентов

### 1. Определить производителя для каждого обнаруженного устройства
```{r}

```

### 2. Обнаружить устройства, которые НЕ рандомизируют свой MAC адрес
```{r}

```

### 3. Кластеризовать запросы от устройств к точкам доступа по их именам. Определить время появления устройства в зоне радиовидимости и время выхода его из нее.
```{r}

```

### 4. Оценить стабильность уровня сигнала внури кластера во времени. Выявить наиболее стабильный кластер


## Оценка результатов



## Вывод



